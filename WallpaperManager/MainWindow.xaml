<Controls:MetroWindow x:Class="WallpaperManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:WallpaperManager"
        mc:Ignorable="d"
        Title="Wallpaper Manager" Height="350" Width="520" MinWidth="520" MinHeight="350"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        GlowBrush="{DynamicResource AccentColorBrush}"
        ShowIconOnTitleBar="True" Loaded="MainWindow_Loaded"
        >
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Name="switchTheme" Content="Dark Theme" Click="switchTheme_Click"/>
            <Button Content="About"/>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    <Controls:MetroWindow.Resources>
        <Style x:Key="TextBlockStyleTextTrimming" TargetType="{x:Type TextBlock}">
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="local:TextBlockUtils.AutoTooltip" Value="True"/>
        </Style>
        <LinearGradientBrush x:Key="BgBrush1" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#888888"/>
            <GradientStop Offset="1" Color="#FFFFF86E"/>
        </LinearGradientBrush>
        <Style x:Key="DataGridChangeColor" TargetType="{x:Type DataGridRow}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                <Setter Property="Background" Value="{StaticResource BgBrush1}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <local:ByteConverter x:Key="byteConverter"/>
    </Controls:MetroWindow.Resources>
    <Grid>
        <!--
        <tb:TaskbarIcon MenuActivation="LeftOrRightClick" ToolTipText="Wallpaper Manager">
            <!- Set a simple context menu  ->
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Next Wallpaper (WIP)" Name="cm_nextWallpaper_button" Click="cm_nextWallpaper_button_Click"/>
                    <MenuItem Header="Interval: 1 Min" Name="cm_interval_button" Click="cm_interval_button_Click"/>
                    <MenuItem Header="Restore Window" Name="cm_restore_button" Click="cm_restore_button_Click"/>
                    <MenuItem Header="Exit" Name="cm_exit_button" Click="cm_exit_button_Click"/>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
        -->
        <TabControl x:Name="tabControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <TabItem Header="Custom">
                <Grid Background="Transparent">

                    <Button x:Name="ButtonOpenDir" Margin="0,31,3,0" VerticalAlignment="Top" HorizontalAlignment="Right" Height="30" Width="40" Click="ButtonOpenDir_Click" ToolTip="Open Directory">
                        <Rectangle Width="20" Height="15">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_folder_open}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <Button x:Name="ButtonShuffleList" Margin="0,101,3,0" HorizontalAlignment="Right" Width="40" Height="29" VerticalAlignment="Top" Click="ButtonShuffleList_Click" ToolTip="Shuffle List">
                        <Rectangle Width="18" Height="18">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_shuffle}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <Button x:Name="ButtonClearList" Margin="0,0,3,4" HorizontalAlignment="Right" Width="40" Height="29" VerticalAlignment="Bottom" Click="ButtonClearList_Click" ToolTip="Clear List">
                        <Rectangle Width="15" Height="18">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_delete}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <Button x:Name="ButtonAddFile" Margin="0,66,3,0" VerticalAlignment="Top" HorizontalAlignment="Right" Height="30" Width="40" Click="ButtonAddFile_Click" ToolTip="Add File(s)">
                        <Rectangle Width="15" Height="18">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_page_add}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                    <ComboBox x:Name="WPStyleComboBox" SelectedIndex="0" SelectedValuePath="Content" ToolTip="Wallpaper Style" HorizontalAlignment="Left" Margin="260,0,0,0" VerticalAlignment="Top" Width="100" SelectionChanged="WPStyleComboBox_SelectionChanged">
                        <ComboBoxItem ToolTipService.ShowOnDisabled="true" HorizontalAlignment="Left" Width="94">Fill</ComboBoxItem>
                        <ComboBoxItem ToolTipService.ShowOnDisabled="true" HorizontalAlignment="Left" Width="94">Fit</ComboBoxItem>
                        <ComboBoxItem HorizontalAlignment="Left" Width="94">Stretch</ComboBoxItem>
                        <ComboBoxItem HorizontalAlignment="Left" Width="94">Tile</ComboBoxItem>
                        <ComboBoxItem HorizontalAlignment="Left" Width="94">Centre</ComboBoxItem>
                        <ComboBoxItem ToolTipService.ShowOnDisabled="true" HorizontalAlignment="Left" Width="94">Span</ComboBoxItem>
                    </ComboBox>
                    <ComboBox x:Name="IntervalComboBox" SelectedIndex="0" IsSynchronizedWithCurrentItem="True" ToolTip="Wallpaper Interval" ItemsSource="{Binding}" HorizontalAlignment="Left" Margin="365,0,0,0" VerticalAlignment="Top" Width="100" SelectionChanged="IntervalComboBox_SelectionChanged">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=Item1}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Button x:Name="ButtonChangeWP" Content="Change" HorizontalAlignment="Left" Margin="3,0,0,0" VerticalAlignment="Top" Padding="0" Width="102" Height="26" FontSize="13.333" Click="ButtonChangeWP_Click"/>
                    <ComboBox x:Name="BackgroundComboBox" HorizontalAlignment="Left" SelectedIndex="0" Margin="110,0,0,0" VerticalAlignment="Top" Width="100" ToolTip="Background" SelectionChanged="BackgroundComboBox_SelectionChanged">
                        <ComboBoxItem HorizontalAlignment="Left" Width="94">Solid Color</ComboBoxItem>
                        <ComboBoxItem HorizontalAlignment="Left" Width="94">Picture</ComboBoxItem>
                        <ComboBoxItem HorizontalAlignment="Left" Width="94">Slideshow</ComboBoxItem>
                    </ComboBox>
                    <tk:ColorPicker x:Name="ColorPicker" ColorMode="ColorCanvas" SelectedColor="Black" ToolTip="Background Color" ShowAdvancedButton="False" UsingAlphaChannel="False" Height="26" VerticalAlignment="Top" Margin="215,0,0,0" HorizontalAlignment="Left" Width="40"/>
                    <DataGrid x:Name="dataGrid" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" AutoGenerateColumns="False" AllowDrop="True" MaxWidth="2560" MaxHeight="1600" MouseDoubleClick="dataGrid_MouseDoubleClick" Drop="dataGrid_Drop" ItemsSource="{Binding DataGridItem, IsAsync=True}" EnableColumnVirtualization="True" EnableRowVirtualization="True" Margin="3,31,48,4">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox x:Name="checkbox" IsChecked="{Binding Path=IsEnabled, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Img" CanUserSort="False" Width="SizeToCells" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Background="Transparent" Tag="{Binding Path=Name}" Height="30" Width="50" ToolTip="Open image with associated application" Click="ImageButton_Click">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Border HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <Image Source="{Binding Path=Path}"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Name" Width="*" IsReadOnly="True" CanUserSort="True" Binding="{Binding Name}" ElementStyle="{StaticResource TextBlockStyleTextTrimming}"/>
                            <DataGridTextColumn Header="Path" Width="*" IsReadOnly="True" Binding="{Binding Path}" ElementStyle="{StaticResource TextBlockStyleTextTrimming}"/>
                            <DataGridTextColumn Header="Resolution" IsReadOnly="True" Binding="{Binding Resolution}"/>
                            <DataGridTextColumn Header="Size" IsReadOnly="True" Binding="{Binding Size, Converter={StaticResource byteConverter}}"/>
                            <DataGridTextColumn Header="Type" IsReadOnly="True" Binding="{Binding Type}"/>
                            <DataGridTemplateColumn CanUserSort="False" Width="SizeToCells" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Background="Transparent" Tag="{Binding Path=Name}" ToolTip="Remove Item From List" Click="ButtonRemoveItem_Click">
                                            <Rectangle Width="12" Height="12">
                                                <Rectangle.Fill>
                                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_close}" />
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Bing">
                <Grid Background="#00E5E5E5">
                    <Label x:Name="label" Content="Coming soon™" HorizontalAlignment="Center"  VerticalAlignment="Center" FontSize="48"/>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Controls:MetroWindow>
    
